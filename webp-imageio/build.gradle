import org.jetbrains.kotlin.gradle.dsl.KotlinCompile

plugins {
    alias(libs.plugins.starter.library.kotlin)
    id("com.starter.publishing")
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

def targetJavaVersion = JavaVersion.VERSION_1_8
tasks.withType(JavaCompile).configureEach {
    options.release.set(targetJavaVersion.majorVersion.toInteger())
}
tasks.withType(KotlinCompile).configureEach {
    kotlinOptions.jvmTarget = targetJavaVersion
}

kotlin {
    jvmToolchain(17)
}

tasks.register("generateVersionProperties") {
    def projectVersion = version
    def propertiesFile = new File(sourceSets.main.output.resourcesDir, "version.properties")
    inputs.property("projectVersion", projectVersion)
    outputs.file(propertiesFile)

    doLast {
        propertiesFile.write """
            |webp_imageio_version = $projectVersion
            |
            """.strip().stripMargin()
    }
}

tasks.named("processResources") {
    dependsOn("generateVersionProperties")
}

dependencies {
    testImplementation(libs.assertj.core)
    testRuntimeOnly(libs.junit.jupiter.engine)
    testImplementation(libs.junit.jupiter.api)
}
